// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/native_test/NativeTest

#ifndef org_chromium_native_test_NativeTest_JNI
#define org_chromium_native_test_NativeTest_JNI

#include <jni.h>

#include "../../../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"

// Step 1: forward declarations.
JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_native_1test_NativeTest[];
const char kClassPath_org_chromium_native_1test_NativeTest[] =
    "org/chromium/native_test/NativeTest";

// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord
    g_org_chromium_native_1test_NativeTest_clazz = 0;
#ifndef org_chromium_native_1test_NativeTest_clazz_defined
#define org_chromium_native_1test_NativeTest_clazz_defined
inline jclass org_chromium_native_1test_NativeTest_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_native_1test_NativeTest,
      &g_org_chromium_native_1test_NativeTest_clazz);
}
#endif

namespace testing {
namespace android {

// Step 2: method stubs.

static void RunTests(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    jcaller,
    const base::android::JavaParamRef<jstring>& commandLineFlags,
    const base::android::JavaParamRef<jstring>& commandLineFilePath,
    const base::android::JavaParamRef<jstring>& stdoutFilePath,
    const base::android::JavaParamRef<jobject>& appContext,
    const base::android::JavaParamRef<jstring>& testDataDir);

JNI_GENERATOR_EXPORT void
    Java_org_chromium_native_1test_NativeTest_nativeRunTests(JNIEnv* env,
    jobject jcaller,
    jstring commandLineFlags,
    jstring commandLineFilePath,
    jstring stdoutFilePath,
    jobject appContext,
    jstring testDataDir) {
  return RunTests(env, base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, commandLineFlags),
      base::android::JavaParamRef<jstring>(env, commandLineFilePath),
      base::android::JavaParamRef<jstring>(env, stdoutFilePath),
      base::android::JavaParamRef<jobject>(env, appContext),
      base::android::JavaParamRef<jstring>(env, testDataDir));
}

}  // namespace android
}  // namespace testing

#endif  // org_chromium_native_test_NativeTest_JNI
