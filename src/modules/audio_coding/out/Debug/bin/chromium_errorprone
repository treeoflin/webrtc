#!/usr/bin/env python
#
# This file was generated by build/android/gyp/create_java_binary_script.py

import argparse
import os
import sys

self_dir = os.path.dirname(__file__)
classpath = ["../lib.java/third_party/errorprone/error_prone_ant-2.0.6.jar"]
bootclasspath = []
extra_program_args = []
if os.getcwd() != self_dir:
  offset = os.path.relpath(self_dir, os.getcwd())
  classpath = [os.path.join(offset, p) for p in classpath]
  bootclasspath = [os.path.join(offset, p) for p in bootclasspath]
java_cmd = ["java"]
# This is a simple argparser for jvm and jar arguments.
parser = argparse.ArgumentParser()
parser.add_argument('--jar-args')
parser.add_argument('--jvm-args')

known_args, unknown_args = parser.parse_known_args(sys.argv[1:])
if known_args.jvm_args:
  jvm_arguments = known_args.jvm_args.strip('"').split()
  java_cmd.extend(jvm_arguments)
if known_args.jar_args:
  jar_arguments = known_args.jar_args.strip('"').split()
  if unknown_args:
    raise Exception('There are unknown arguments')
else:
  jar_arguments = unknown_args


if bootclasspath:
    java_cmd.append("-Xbootclasspath/p:" + ":".join(bootclasspath))
java_cmd.extend(
    ["-classpath", ":".join(classpath), "-enableassertions", "com.google.errorprone.ErrorProneCompiler"])
java_cmd.extend(extra_program_args)
java_cmd.extend(jar_arguments)
os.execvp("java", java_cmd)
